name: Deploy Python Flask to Cloud Run

on:
  push:
    branches:
      - main # or your main branch name

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Authenticate with Google Cloud
      id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Build and Deploy to Cloud Run
      run: |
        # Change directory to where your main.py and requirements.txt are located
        cd cpa-backend # <--- THIS IS THE CRUCIAL CHANGE
        
        gcloud run deploy empire-dashboard-backend \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/empire-dashboard-backend \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --source . # This tells Cloud Run to build from the current directory (now cpa-backend)
      env:
        # Pass the CPA_GRIP_ACCOUNTS_CONFIG environment variable to Cloud Run
        CPA_GRIP_ACCOUNTS_CONFIG: ${{ secrets.CPA_GRIP_ACCOUNTS_CONFIG }}
        # Pass the FIREBASE_SERVICE_ACCOUNT_KEY environment variable
        FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}

    - name: Get Cloud Run Service URL
      id: get_url
      run: |
        SERVICE_URL=$(gcloud run services describe empire-dashboard-backend --platform managed --region us-central1 --format 'value(status.url)')
        echo "::set-output name=url::$SERVICE_URL"

    - name: Post Authenticate with Google Cloud
      run: |
        echo "Deployment successful! Service URL: ${{ steps.get_url.outputs.url }}"

    - name: Complete job
      run: echo "Deployment workflow finished."
